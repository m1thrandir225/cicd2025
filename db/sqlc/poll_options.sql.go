// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: poll_options.sql

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createPollOption = `-- name: CreatePollOption :one
INSERT INTO poll_options(
    poll_id,
    option_text
) VALUES (
    $1,
    $2
) RETURNING id, poll_id, option_text, created_at
`

type CreatePollOptionParams struct {
	PollID     pgtype.UUID `json:"poll_id"`
	OptionText string      `json:"option_text"`
}

func (q *Queries) CreatePollOption(ctx context.Context, arg CreatePollOptionParams) (PollOption, error) {
	row := q.db.QueryRow(ctx, createPollOption, arg.PollID, arg.OptionText)
	var i PollOption
	err := row.Scan(
		&i.ID,
		&i.PollID,
		&i.OptionText,
		&i.CreatedAt,
	)
	return i, err
}

const deletePollOption = `-- name: DeletePollOption :one
DELETE from poll_options
WHERE id = $1
RETURNING id, poll_id, option_text, created_at
`

func (q *Queries) DeletePollOption(ctx context.Context, id uuid.UUID) (PollOption, error) {
	row := q.db.QueryRow(ctx, deletePollOption, id)
	var i PollOption
	err := row.Scan(
		&i.ID,
		&i.PollID,
		&i.OptionText,
		&i.CreatedAt,
	)
	return i, err
}
